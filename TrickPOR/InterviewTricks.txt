Question: suppose there's an Array A that contains numbers 1-N in random order. now the given array B is created by counting how many smaller number exist in front of that number for the index.
Create array A from given array B.

Ex : A : [ 3, 5, 1, 2,4] ( answer )
B : [ 2, 3, 0, 0, 0] (given in question)

https://www.reddit.com/r/leetcode/comments/1cvqixl/google_l4_india_hard_problem/ 
Question
Given an array A of length n. you perform some operations on array A. Each operations involves from the end of an array pick last two elemmets l and r and remove both of them and add single value with l - r. you do this operation until you have one element remains in array.
you have given the the length n and the range l in which the the element of array lies 1 <= a[i] <= l and the value of d > 0 the last element remains in array.
Regenerate the array each element lying in the range (if multiple answers possible print any of them) if not possible print -1.
Note value obtained from inermediate operations can be negative. But original elements of arr should belong to the range.


3 4 4 (n,d,l) 1 1 4 (1 1 4 -> 1 -3 -> 4)

3 4 2 (n,d,l) -1

Solution
Keep the first element of the array as d. Now you have to ensure that the rest of the elements are such that they cancel out each other as the array keeps on shrinking.

Writing a few cases by hand lets you observe that if n is odd, after fixing the first element you can have all other elements as 1 (d 1 1 1...). If n is even, the array is of the pattern (d 1 2 1 1 1...)

https://codeforces.com/blog/entry/129626 
Given A, B, C, D. Find ∑i=AB∑j=CDi⊕j
Constraints:

1 <= A <= B <= 109
1 <= C <= D <= 109

Basic concepts:

Definition and differences of process/thread and relations between user threads and OS threads.
Causes of deadlock and avoidance of deadlocks
Singleton design pattern [multi-level locking]
Concurrent modification exception examples and other exceptions
Blocking vs non-blocking io
Async Api design
Atomic integers and counters
Intermediate concepts:

thread-pools and executor-service framework [java]
synchronized vs re-entrant locks vs readwrite locks vs futures
fork, wait and notifyAll
Concurrent DS: implement thread-safe cache and blocking queue [producer-consumer]
Double checked locking
Deadlock vs live-lock
Mutex vs Semaphores
Dinning philosophers problem
Advance concepts:

Concurrency design patterns [Good start point: Active object pattern]
Map-reduce
CPU scheduling algorithms
Compare-and-Swap
two-phase-locks
Thread throttling
Distributed Algo's and race-conditions [example rate limiter]


Questions:


1️⃣ Binary Tree Root (No Color Constraints):
Given an undirected acyclic connected graph where each node has at most 3 edges, find a node which, when made the root, converts the graph into a binary tree.
Approach: Just return any node with degree less than 3


2️⃣ Binary Tree with Alternating Colors:
Given an undirected connected acyclic graph where each node has at most 3 edges, and nodes are colored Black or White, find a root such that:
• The graph becomes a binary tree.
• The tree alternates in color across layers (e.g., Depth 0: White, Depth 1: Black, Depth 2: White, etc.).
Either White or Black can be the starting color.
Approach: First check if there is no edge with same color on both ends and after verfiying this return any node with degree less than 3.


3️⃣ Binary Tree with Fixed Color Order (R, B, W):
Given an undirected connected acyclic graph where each node has at most 3 edges, and nodes are colored Red (R), Blue (B), or White (W), find a root such that:
• The graph becomes a binary tree.
• The layers of the tree follow a fixed color sequence (e.g., RBWRBW… or BWRBWR… or WRBWRB).
Approach: For any given node with it's color we can determine it's parent color beause relative order is fixed RBWRBW. So there can be atmost 1 neighbor with it's parent color and other nodes should have color equal to it's child color. Ex: If given node is B then parent can be R and child can be W. If there is a node with no parent color neighbor that means it is candidate for root and if we find more than 1 candidate for root then we return -1.


Explained and coded all 3 problems within 40min Yestarday and got call from recrutor today that I have cleared the round.


I will keep this post updated with further process.

https://leetcode.com/discuss/interview-question/6246929/amazon-problems-online-rounds