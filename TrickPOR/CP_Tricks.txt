cumilitive sum(csum) of matrix (1,1) to (i,j) csum[i][j]=csum[i-1][j]+csum[i][j-1]-csum[i-1][j-1]+matrix[i][j]
query of any sum of rectangle(x1,y1,x2,y2)=csum[x2][y2]-csum[x2][y1-1]-csum[x1-1][y2]+csum[x1-1][y1-1];


Rotate by 45 degree to linearize distance:
Eg if distance between two points is given as max(abs(x1-x2),abs(y1-y2))
it can be written in form summation form by changing cordinate x1=(x1+y1),y1=(x1-y1)
distance will be (abs(x1-x2)+abs(y1-y2))/2;
//https://atcoder.jp/contests/abc351/tasks/abc351_e


Re-root the tree technique.
first caluclate by subtree rooting in dfs , and then calcuate the re-rooted value by second dfs
//https://cses.fi/problemset/result/7013514/



when finding max/min after operation on strings 
see what string will look like when no operations can be performed on it.Eg:https://www.codechef.com/START133A/problems/ABCC3


when two parameters are there in greedy, may be sort by one and use heap/multiset on other parameter.
Eg:https://leetcode.com/problems/minimum-cost-to-hire-k-workers/?envType=daily-question&envId=2024-05-11 


when on ith move we can move by +i or -i, then minimum steps to reach a point p is,
let d(x)=(x*x+x)/2  and d(x) >=p , if differnece between d(x)-p is even and less than x then in atmost 1 extra jump exactly p can be achieved.

permutation cycles, edge between i and p[i], graph is a componenet, where each component is a simple cycle.


For these type of questions https://codeforces.com/blog/entry/129410 
Every subarray the first and last element should be min or max
Every subarray should be monotonically increasing or decreasing

Lexicographically least topsort , instead of queue use priortiy queue in regular topsort algo

In row and column operations, think if anyone can be done first
https://leetcode.com/problems/score-after-flipping-matrix/description/?envType=daily-question&envId=2024-05-13


counts how many times a edge will be used, to count the number of operations.
https://leetcode.com/problems/distribute-coins-in-binary-tree/submissions/1260964237/?envType=daily-question&envId=2024-05-18




top set bottom set trick for median running or top k type of queries with updates.
maintain multisets of elements.


Multisource bfs-https://www.codechef.com/problems/PRISON


//identity
x+y = (x^y) + 2(x&y)
floor((x^y)/2)=floor((x/2) ^ (y/2))=floor(x/2) ^ floor(y/2)
x < y < z  we always have min(x^y, y^z) < x^z. 
any set of integers, 
the minimum bitwise XOR between some pair of them will always be obtained by some adjacent pair in sorted order.

piegonhole principle


Segtree to find largets sum sequence with non adjcent element
https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements/submissions/1268288437/ 


LIS in o(nlogn) without merge sort
int LIS(int arr[], int N) 
	{ 
	    // Your code goes here
	    vector<int> v;//stores the LIS
	    v.push_back(arr[0]);
	    
	    for(int i=1;i<N;i++){
	        auto it=upper_bound(v.begin(),v.end(),arr[i]);
	        if(it==v.end()){
	            v.push_back(arr[i]);
	        }else{
	            *it=arr[i];//replace the bigger number with smaller one, makes space for longer sequence
	        }
	    }
	    
	    return v.size();
	} 



Number of occurences of s2 as subsequence in s1
int countWays(string s1, string s2) {
	// code here
	int n=s1.size(),m=s2.size();

	vector<vector<int> > dp(n+1,vector<int> (m+1,0));


	int ans=0,mod=1e9+7;
	for(int i=0;i<=n;i++){
		dp[i][0]=1;
	}


	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			dp[i][j]=dp[i-1][j];
			if(s1[i-1]==s2[j-1]){
				dp[i][j]=(dp[i][j]+dp[i-1][j-1])%mod;
			}
			
		}
		
	}

	return dp[n][m];
}

Think binary operations (/2,*2,*2+1) etc with help of binary tree, visulaize, check for parity of operations etc.
https://codeforces.com/contest/1981/problem/C 

Find total number of segment[l,r] intersects- make a array of (l,-i),(r,i) and sort it and count the actives points at end of each segment
and count the sum.
https://atcoder.jp/contests/abc355/tasks/abc355_d  


sum over all pairs (i,j) with  i<j iin A is symmetric for i and j,  rearrange the sequence  without changing the answer. 
assume A is sorted in ascending order.

LExicogrpahic maximum / least when deleting charachter look at the next character which replaces the current character,
 i.e look at index i+1 if index is being deleted.

 https://codeforces.com/problemset/problem/983/B think of [l,r] computationi n matrix as a 2-d matrix, may help .

look for invariants in swapping 2-d matrix problems,https://codeforces.com/contest/1980/problem/E 

functional graphs-each node outdegree is 1


when abs and addition are involved, keep track of maximum and minimum possible
https://codeforces.com/contest/1984/problem/C1 

https://codeforces.com/contest/1985/problem/G all digit can be 9/k at most because carry on mutiplication will 

Think of regular bracket sequence as tree,
On open bracket create a new child node and move to it and on closed bracket move to parent.
hash of each subtree will be based on hash of each children,all leaf node will have hash of 1.

No of permutations in which i th smallest elemetn is smaleest in the cycle it is part of is N!/i


(x, y) to calculate the Manhattan distances between them, instead of using |x1-x2|+|y1-y2| 
convert all points (x, y) into (x+y, x-y) and the distances will become max(|x1-x2|, |y1-y2|) (also known as Chebyshev distance). 
https://codeforces.com/blog/entry/57534


https://www.codechef.com/problems/GRAPHCOST  
select prefix minimum as much as possible,once prefix does not decrese select prefix minmum by reversig the array.

dsu by sorting edges of tree according to edge length, then computing stats.
https://practice.geeksforgeeks.org/contest/job-a-thon-34-hiring-challenge/problems 

Operations related to MEX, distinct element count, max element, number of elements

Upto 10^12 there can be atmost 300 non-prime numbers between any two consecutive prime numbers.
When A≤B then floor(B−1/A)≤N≤ceil(B−1/A) where N is the number of multiples of A between any two multiples of B

gcd(F[n],F[m])=F[gcd(n,m)], where F[x] is the xth fibonacci numbers and first two terms are 0,1

IF two properties are there and oredering based on them, remove useless elements, see the limits on elements.


https://codeforces.com/contest/1987/problem/D
think about only frequency, moves for B os tp remove elemtns such that number of distinct elements are reduced.
currently on index i,and j extra moves available,maximum possible elements that can be removed by B


https://atcoder.jp/contests/abc360/tasks/abc360_e 
probablity of only 1 is different rest all are same, use this to compute final probablity in a loop, think like state diagram


when operation on adjacent elements,think differnce array, think about even and odd number of elemnts
Swapping adjacent elements in a distinct array is basically trying to equate two permutations using adjacent swaps.
possible when same number of inversions

https://math.stackexchange.com/questions/203835/enumerating-number-of-solutions-to-an-equation


https://codeforces.com/contest/1988/problem/D
//dp[v][i]= the value if the vertex v is removed in ith round
//total loss is a[i]*b[i],where b[i]= round in which it is removed.
//as adjacent items can;t be picked in same round, round number will differ.
//due to max set The "independent set" constraint ,the upper bound will be around 19 


Minimum number of colors so that no two adjacent vertex have same color is based on size of maximum clique in graph
https://codeforces.com/contest/1991/problem/D

Think about graph bipartite

Maintain three mutlitsets in parts and insert and remove elements and balace it.
https://leetcode.com/problems/finding-mk-average/description/

when removing a fixed size k subarray, and then concat, the remaining part, the modulo of remaining index % k does not change.
https://codeforces.com/contest/1993/problem/D 


When operation sare done, think about array monotonicity after operation,In below question array becomes monotonic after 2 operations
https://mirror.codeforces.com/contest/1990/problem/C

when row operation and 2*2 subgrid operation, thin kin what cases 2*2 operation will be useful.
in below problem only useful when there are <=4  black
https://mirror.codeforces.com/contest/1990/problem/D


AS the gain in each round is decresing , binary search can be done on the last value picked. given the values <= {certain value}
 can be computed efficiently.
https://mirror.codeforces.com/contest/1996/problem/F


when maximizing for ax+b*(x+1) where a*x + b*(x+1)<=constraint, first get max possible by all x, then  for x+1, 
then for remainder  convert the x to x+1.
https://mirror.codeforces.com/contest/1995/problem/B2


Square root decomposition,way to solve interval intersection queries.
https://atcoder.jp/contests/abc365/tasks/abc365_g 



Magnify the grids and put / and \ across diagonals in individual 3*3 grid.
https://leetcode.com/problems/regions-cut-by-slashes

https://mirror.codeforces.com/contest/1998/problem/B 
rotate the array by 1.


https://mirror.codeforces.com/contest/2002/problem/B
observer the operation, if a or reverse of a is same as b, then bob will win


https://leetcode.com/problems/count-number-of-balanced-permutations/submissions/1444046895
For sum make partitions , in partition keep count of frequency of each digot used, this will be used for inverse factorial, 
usig formula for making permutations using repeated elements

https://codeforces.com/contest/2031/problem/D
See the movement focus on prefix max, suffix minimma, sol(i)=sol(i+1) 
if prefix max < sufiix_minima, becuase every tree reachable from i+1 is also reachable from i


With any positive integer x,there is at least one square number in [x,2x]
https://codeforces.com/problemset/problem/1713/C

https://codeforces.com/problemset/problem/1924/A
it is always optimal to choose the first character as the one whose first index of occurrence 
in the given string is the highest

https://codeforces.com/problemset/problem/1949/B
Match the largest and smallest element of a and b,
check for all i , smallest i A with largest i b, and largest n-i A with smallest b-i B.
 

https://leetcode.com/problems/longest-subsequence-with-decreasing-adjacent-difference/description/ 
dp with state reduction dp(num,diff)-- > store longest ending at num with diff<=diff (prefix max of diff)

https://leetcode.com/problems/maximize-subarray-sum-after-removing-all-occurrences-of-one-element/
For removal of elements use segment tree and keep segment tree for max subarray

https://codeforces.com/contest/2057/problem/C 
Start from highest set bit where they differ

https://codeforces.com/contest/2057/problem/D
maximum and minimum are at extremes ends of segment in optimal solution,use this fact to build a segment tree.

https://codeforces.com/problemset/problem/1770/B 
Always a constant answer, think about typical permutations (n,1,n-1,2,)..

https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations/solutions/6267498/java-c-python-mono-decreasing-deque-o-n/


20250114
https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations/?slug=count-non-decreasing-subarrays-after-k-operations&region=global_v2
maintain deque, iterate from right to left, and decrese right pointer based on operation count.


https://codeforces.com/contest/2055/problem/C
Try to make sum 0

https://www.codechef.com/problems/EQUXOR
Prefix xor and equalize it , see the condition, and dp on the prefix xor value


20250118
https://codeforces.com/contest/2056/problem/D
way to calculate bad sehment, count of <= element=gt element, use +1, -1 cumiltaive sum


20250120
https://leetcode.com/problems/manhattan-distances-of-all-arrangements-of-pieces/description/
consider every pair, and select positions for other pairs(multiply this value , use combinatorics forumla)
technique to calculate this


20250121
https://codeforces.com/contest/2061/problem/D start from highest element,if not found, then it can be created by 
x/2 and (x+1)/2

https://codeforces.com/contest/2061/problem/E : as number of elements to do AND is less, brute force for number of operation
and min value acheived, see incremental gain in each operation for a particualr elemenet select k least incremental gain.

20250125
https://codeforces.com/problemset/problem/1697/C:A move right, C mode to left, if b is removed both string should be same,
In a way position of b can be considered stationary.
After that, we recall that 'a's can only move to the right and 'c's can only move to the left. Thus, we check that the i
-th occurrence of 'a' in s is to the left or equal to the i-th occurrences of 'a' in t and vice versa for 'c's.

20250126
https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting/?envType=daily-question&envId=2025-01-26:
Think in terms of directed acylic graphs,

20250129
https://codeforces.com/problemset/problem/2046/B , think in terms that lexicographically minimal sequence means,
picking from suffix minima greedily, and rest of elements 


20250209
https://codeforces.com/contest/2059/problem/C : consider  suffix and only upto where all values are 1, then greedily select
values >=i for filling elements for mex .


20250225
Lucas theorem basically suggests that the value of nCr can be computed by multiplying results of niCri where ni and ri are individual same-positioned digits 
in base p representations of n and r respectively., can be helpful when p is smalll.


20250301
https://codeforces.com/contest/2071/problem/C  ::Think about depth of tree, when making movements, 

20250303
https://leetcode.com/problems/maximize-the-distance-between-points-on-a-square  :: As points are on perimter
the manhtatn distance can be linearized, imagine opening the square from one of sides end and spreading it along x axis

20250307
https://codeforces.com/contest/2071/problem/D1  : Make patterns and think recursively, like for m>n , a(2m) and a(2m+1)
are same

20250308
https://codeforces.com/contest/2067/problem/D: Think about permutation, and manhtaan distance limits , Hint:think extreme points
,point not being there etc.

https://codeforces.com/contest/2067/problem/E: Only 1 zero can be there in sequence, see if zero can be included, Hint: mex 
means think about 0.

20250309
https://leetcode.com/problems/maximize-subarrays-after-removing-one-conflicting-pair: priorty queue ,iterate from right to left

20250310
https://leetcode.com/problems/count-of-substrings-containing-every-vowel-and-k-consonants-ii : to get a count for exactly k,
get_cnt(k)-get_cnt(k-1), if counting atleast k is easy.

20250317
https://codeforces.com/contest/2075/problem/C : to get count of twp color >=i and >=n-i, this is a way to simplyfy
calculation, as (i,n-i) partitions the total possible colorings

20250323
https://codeforces.com/contest/448/problem/C : Divide and conquer, find minimum index and split the array and solve independently.
https://codeforces.com/contest/2085/problem/C : Make the laregr number power of 2 greater than it, so that smaller number will not have that
bit set, to get x+y = x^y , x&y=0, means no bit which is common to both.

20250324
https://www.geeksforgeeks.org/problems/matrix-chain-multiplication0303/1 : O(n^3)dp ,assume we put bracket at various places
for example in interval [st,en] try all places [st+1,en-1]

20250331
https://leetcode.com/problems/put-marbles-in-bags/description: Priority queue of adjacent elements
