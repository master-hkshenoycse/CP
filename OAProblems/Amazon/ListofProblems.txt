ome of those questions especially which are marked hard are the OA tagged questions. A friend of mine recently had Amazon onsite, they were asked the following

Unix File Search API for object oriented design.

A question similar to knight dialer on LC.

Another one was not on LC and something related to choosing a lottery winner.

https://leetcode.com/problems/sum-of-total-strength-of-wizards/



ound 1:
2 LP (around inventing or simplifying something, time when things werent clear)
Leetcode Hard - Word Ladder (Shortest Path) + followups
Solve optimally. didn't solve followup

Round 2:
2 LP (around customer obssession)
Leetcode Hard - Number of faucet needed to water a garden + followups
struggled at first but managed to solved optimally without any help

Round 3:
(2 LP learned something new and biggest project worked on)
Design a shopping cart (LLD)
don't know how I did here

Round 4:
2 LP (critical feedback and conflict with peer)
Design a web crawler (HLD)
missed few deep dives



Interview Question â€” Longest regex match with single wildcard
https://codeforces.com/blog/entry/127169

By perlentaucher, history, 8 days ago, In English
Hi there, I was given the following interview question and was wondering, if there's a more simple way to solve it:

Question: Given a text and a regular expression that only contains one wildcard character '*' (which matches any string), return the length of the longest matched substring in the text. Return -1 if no answer can be found. 1 <= |Text|, |Regex| <= 10^6.

Example: text = "programming", regex = "r*in". The matches are "rammin", "rogrammin", thus the answer is 9.

My solution: I make a case distinction based on whether the regex is of the form (BEFORE*AFTER, AFTER, BEFORE, *). I then use the Z-Function on the string to get matches of BEFORE and AFTER and then select the first/last matches to calculate the length.

Time/space complexity is obviously O(n) but I think that my solution is a bit overcomplicated.